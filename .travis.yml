language: python
python:
    - "2.7"
#    - "3.4" For now romanesco doesn't support Python 3

cache:
  directories:
  - $HOME/virtualenv/python2.7.9
  - $HOME/.cache/pip
  - $HOME/.cache/node_modules
  - $HOME/spark-1.3.1-bin-hadoop2.4

sudo: false

compiler:
    - gcc

addons:
  apt:
    packages:
    - libpng12-dev
    - libgdal1-dev
    - pkg-config
    - libnetcdf-dev

before_install:
    # minerva has been cloned to Kitware/minerva by travis
    # girder needs to be cloned and then minerva moved under girder
    - cd $HOME/build
    # remove existing girder dir, it remains from caching operations
    - rm -rf girder
    - git clone https://github.com/girder/girder.git
    - cd girder
    - git checkout `cat $TRAVIS_BUILD_DIR/.girder-version`
    - cd $HOME/build
    - mv Kitware/minerva girder/plugins
    - cp girder/plugins/minerva/server/conf/minerva.dist.cfg girder/plugins/minerva/server/conf/minerva.local.cfg

    # clone romanesco
    - cd $HOME/build/girder/plugins
    - git clone https://github.com/Kitware/romanesco.git
    - cd romanesco
    - git checkout `cat $TRAVIS_BUILD_DIR/.romanesco-version` # If you update this version, be sure that it works with your chose girder version above.
    - cd $HOME/build

    - cd girder
    # copy the placeholder bsve credentials, needed even though we mock bsve api calls
    - cp plugins/minerva/server/jobs/bsve.json.in plugins/minerva/server/jobs/bsve.json

    # Show the memory state; this lets us more quickly determine when the
    # travis environment is bad
    - vmstat
    - export IGNORE_PLUGINS=celery_jobs,geospatial,google_analytics,hdfs_assetstore,jquery_widgets,metadata_extractor,mongo_search,oauth,provenance,thumbnails,user_quota,vega;
    - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi
    - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.0.2; export PY_COVG="OFF"; else export MONGO_VERSION=2.6.9; export PY_COVG="ON"; export DEPLOY=true; fi

    # mongo
    - pushd "${HOME}"
    - curl "https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${MONGO_VERSION}.tgz" | gunzip -c | tar x
    - cd mongodb-*/bin && export PATH="${PWD}:${PATH}"
    - popd
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version

    # cmake
    - cd $HOME
    - curl -L "http://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz" | gunzip -c | tar x
    - cd cmake-*/bin && export PATH="${PWD}:${PATH}"
    - cmake --version

    # install spark
    - cd $HOME
    - wget http://www.scala-lang.org/files/archive/scala-2.10.5.tgz
    - tar xzvf scala-2.10.5.tgz -C ~
    - export SCALA_HOME=$HOME/scala-2.10.5
    - export PATH=$PATH:$SCALA_HOME/bin
    # spark may be cached
    - export SPARK_HOME=$HOME/spark-1.3.1-bin-hadoop2.4
    - if [ ! -f $SPARK_HOME/sbin/start-master.sh ]; then wget http://d3kbcqa49mib13.cloudfront.net/spark-1.3.1-bin-hadoop2.4.tgz; fi
    - if [ ! -f $SPARK_HOME/sbin/start-master.sh ]; then tar xzvf spark-1.3.1-bin-hadoop2.4.tgz -C ~; fi
    - export SPARK_MASTER_IP=localhost
    - $SPARK_HOME/sbin/start-master.sh
    - sleep 3
    - $SPARK_HOME/sbin/start-slave.sh worker1 spark://localhost:7077

install:
    - cd $HOME/build/girder
    - mkdir _build
    - export GIRDER_SOURCE_DIR="$PWD"
    - export GIRDER_BUILD_DIR="$PWD/_build"
    - pip install -r "${GIRDER_SOURCE_DIR}/plugins/minerva/cmake/travis-pip-freeze.txt" -U
    # create the Romanesco config and enable spark plugin
    - cp /home/travis/build/girder/plugins/romanesco/romanesco/worker.dist.cfg /home/travis/build/girder/plugins/romanesco/romanesco/worker.local.cfg
    - sed -i 's/plugins_enabled=/plugins_enabled=spark/' /home/travis/build/girder/plugins/romanesco/romanesco/worker.local.cfg
    - cd /home/travis/build/girder/plugins/romanesco
    - pip install -e .[spark]
    - python -m romanesco &
    - cd /home/travis/build/girder
    # handle caching of npm modules
    - mkdir -p $HOME/.cache/node_modules || true
    - ln -sf $HOME/.cache/node_modules .
    - npm prune
    # build and install girder
    - npm install
    # replace girder's ctest config with minerva's
    - cp "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/CTestConfig.cmake" .

script:
    - JASMINE_TIMEOUT=15000 PYTHONPATH="$PYTHONPATH:$GIRDER_SOURCE_DIR/plugins/minerva" ctest -S "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/travis_continuous.cmake" -VV || true
    - if [ -f _build/test_failed ] ; then false ; fi
